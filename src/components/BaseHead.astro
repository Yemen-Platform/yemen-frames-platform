---
import siteConfig from '@/site-config'
import '@/styles/global.css'
import '@/styles/prose.css'
import '@/styles/dot.css'

interface Props {
  title?: string
  description?: string
  image?: { src: string; alt?: string }
  pageType?: 'website' | 'article'
}

const { description = '', image = siteConfig.image, pageType = 'website' } = Astro.props

const title = [Astro.props.title, siteConfig.title].filter(Boolean).join(' | ')

const resolvedImage = image?.src
  ? {
      src: new URL(image.src, Astro.site).toString(),
      alt: image.alt,
    }
  : undefined

const canonicalURL = new URL(Astro.request.url, Astro.site)

function formatCanonicalURL(url: string | URL) {
  const path = url.toString()
  return path.includes('?') ? path.replace(/\/?$/, '') : path.replace(/\/?$/, '/')
}

const structuredData = [
  {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "url": Astro.site,
    "name": siteConfig.title,
    "description": siteConfig.description
  },
  pageType === 'article' && {
    "@context": "https://schema.org",
    "@type": "Article",
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": formatCanonicalURL(canonicalURL)
    },
    "headline": Astro.props.title || siteConfig.title,
    "description": description,
    "image": resolvedImage?.src,
    "author": {
      "@type": "Organization",
      "name": siteConfig.title
    },
    "publisher": {
      "@type": "Organization",
      "name": siteConfig.title,
      "logo": {
        "@type": "ImageObject",
        "url": siteConfig.image?.src || ''
      }
    },
    "datePublished": new Date().toISOString()
  },
  {
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": [
      {
        "@type": "ListItem",
        "position": 1,
        "name": "الرئيسية",
        "item": Astro.site
      },
      {
        "@type": "ListItem",
        "position": 2,
        "name": Astro.props.title || siteConfig.title,
        "item": formatCanonicalURL(canonicalURL)
      }
    ]
  }
].filter(Boolean)
---

<!-- High Priority Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>{title}</title>
<meta name="generator" content={Astro.generator} />

<!-- Low Priority Global Metadata -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="alternate" type="application/rss+xml" href="/rss.xml" title="RSS" />

<!-- Page Metadata -->
<link rel="canonical" href={formatCanonicalURL(canonicalURL)} />
<meta name="description" content={description} />

<!-- Open Graph -->
<meta property="og:type" content={pageType} />
<meta property="og:url" content={formatCanonicalURL(canonicalURL)} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
{resolvedImage?.src && <meta property="og:image" content={resolvedImage.src} />}
{resolvedImage?.alt && <meta property="og:image:alt" content={resolvedImage.alt} />}

<!-- Twitter / X -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={formatCanonicalURL(canonicalURL)} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
{resolvedImage?.src && <meta property="twitter:image" content={resolvedImage.src} />}
{resolvedImage?.alt && <meta name="twitter:image:alt" content={resolvedImage.alt} />}

<!-- SEO Verification -->
<meta name="google-site-verification" content="Saina7Yz75EpXBX4YnJtgeNf-I8tqPAo223npu5_ARs" />
<meta name="facebook-domain-verification" content="p104rmdyx33ro8yy2aghhynac0ny8o" />
<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>

<!-- NProgress Page Transitions -->
<script>
  import nprogress from 'nprogress'

  document.addEventListener('astro:before-preparation', () => {
    nprogress.start()
  })

  document.addEventListener('astro:page-load', () => {
    nprogress.done()
  })
</script>
